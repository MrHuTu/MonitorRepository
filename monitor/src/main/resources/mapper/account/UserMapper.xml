<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhongda.monitor.account.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.zhongda.monitor.account.model.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, password, phone, email, company, real_name, create_time, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="seelctSearchUserByManege" resultMap="BaseResultMap">
  		select * from `user` where user_name like concat('%',#{condition,jdbcType=VARCHAR},'%') ||
  		phone like concat('%',#{condition,jdbcType=VARCHAR},'%') ||
  		email like concat('%',#{condition,jdbcType=VARCHAR},'%') ||
  		company like concat('%',#{condition,jdbcType=VARCHAR},'%') ||
  		real_name like concat('%',#{condition,jdbcType=VARCHAR},'%') ||
  		DATE_FORMAT(create_time,'%Y-%m-%d %H:%i:%s') like concat('%',#{condition,jdbcType=VARCHAR},'%') ||
  		`status` like concat('%',#{condition,jdbcType=VARCHAR},'%') 
  </select>
  <select id="selectPuser" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	select us.user_name from user_project up LEFT JOIN user us on up.user_id=us.user_id where up.project_id=#{projectId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
  	 select 
    <include refid="Base_Column_List" />
    from user
  </select>
  <select id="selectUsersByProjectId" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
  	select * from user where user_id in (SELECT user_id FROM user_project where project_id = #{projectId,jdbcType=INTEGER})
  </select>
  <select id="selectNoUsersByProjectId" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
  	select * from user where user_id not in (SELECT user_id FROM user_project where project_id = #{projectId,jdbcType=INTEGER})
  </select>
  <select id="selectUsersByProjectIdCondition" resultMap="BaseResultMap" >
  	select * from user where user_id in (SELECT user_id FROM user_project where project_id = #{projectId,jdbcType=INTEGER})
  	&amp;&amp; user_id like concat('%',#{condition,jdbcType=VARCHAR},'%')
  	|| user_name like concat('%',#{condition,jdbcType=VARCHAR},'%')
  	|| real_name like concat('%',#{condition,jdbcType=VARCHAR},'%')
  	|| status like concat('%',#{condition,jdbcType=VARCHAR},'%')
  </select>
  <select id="selectNoUsersByProjectIdCondition" resultMap="BaseResultMap" >
  	select * from user where user_id not in (SELECT user_id FROM user_project where project_id = #{projectId,jdbcType=INTEGER})
  	&amp;&amp; user_id like concat('%',#{condition,jdbcType=VARCHAR},'%')
  	|| user_name like concat('%',#{condition,jdbcType=VARCHAR},'%')
  	|| real_name like concat('%',#{condition,jdbcType=VARCHAR},'%')
  	|| status like concat('%',#{condition,jdbcType=VARCHAR},'%')
  </select>
  <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_name = #{userName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteUsers" parameterType="java.util.List">
  	delete * from user
  	where user_id in 
	<foreach collection="list" index="index" item="item" open="(" separator="," close=")">     
        #{item}     
    </foreach>
  </delete>
  <insert id="insert" parameterType="com.zhongda.monitor.account.model.User" useGeneratedKeys="true" keyProperty="userId">
    insert into user (user_id, user_name, password, 
      phone, email, company, 
      real_name, create_time, status
      )
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhongda.monitor.account.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhongda.monitor.account.model.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhongda.monitor.account.model.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <select id="validateUserByPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
  	SELECT user_id,user_name,phone,real_name FROM  user WHERE phone =#{phone , jdbcType=VARCHAR }
  </select>
  
   <select id="validateUserByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
  	SELECT user_id, user_name,email,real_name FROM  user WHERE email=#{email , jdbcType=VARCHAR }
  </select>
  
</mapper>